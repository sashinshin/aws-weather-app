// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Weather App test Stack created 1`] = `
Object {
  "Outputs": Object {
    "weatherapiEndpoint6FD5E664": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "weatherapiBE4B60EC",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "weatherapiDeploymentStageprod07E5ABF0",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AccessWeatherDataLambdaD4FDB435": Object {
      "DependsOn": Array [
        "AccessWeatherDataLambdaServiceRoleDefaultPolicy1C88B811",
        "AccessWeatherDataLambdaServiceRoleBB377F47",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e305cce78125df9fb5b464651164de705a1a80f3a0abb5d62a4f14b479b0b570.zip",
        },
        "Description": "Lambda that access weather data",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "WEATHER_BUCKET_NAME": Object {
              "Ref": "WeatherS3970C7C5A",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AccessWeatherDataLambdaServiceRoleBB377F47",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AccessWeatherDataLambdaServiceRoleBB377F47": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AccessWeatherDataLambdaServiceRoleDefaultPolicy1C88B811": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WeatherS3970C7C5A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "WeatherS3970C7C5A",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AccessWeatherDataLambdaServiceRoleDefaultPolicy1C88B811",
        "Roles": Array [
          Object {
            "Ref": "AccessWeatherDataLambdaServiceRoleBB377F47",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f98b78092dcdd31f5e6d47489beb5f804d4835ef86a8085d0a2053cb9ae711da.zip",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "StaticPageS3DeployAwsCliLayerC6CF3ED0",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "StaticPageS36AC60243",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "StaticPageS36AC60243",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetWeatherDataSchedule6CC67B65": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(0 3 ? * * *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "RetrieveWeatherDataLambda7E460D3F",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "GetWeatherDataScheduleAllowEventRuleAwsWeatherAppStackRetrieveWeatherDataLambda51CE31694A4C22AD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "RetrieveWeatherDataLambda7E460D3F",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "GetWeatherDataSchedule6CC67B65",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "RetrieveWeatherDataLambda7E460D3F": Object {
      "DependsOn": Array [
        "RetrieveWeatherDataLambdaServiceRoleDefaultPolicyB1C4C87A",
        "RetrieveWeatherDataLambdaServiceRoleC7E56E2A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "74eb26d849a3825c877c5e2eeda77adf86c1c5de4059a515f8cf33212fbc614c.zip",
        },
        "Description": "Lambda that retrieves and saves weather data",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "WEATHER_BUCKET_NAME": Object {
              "Ref": "WeatherS3970C7C5A",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "RetrieveWeatherDataLambdaServiceRoleC7E56E2A",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "RetrieveWeatherDataLambdaServiceRoleC7E56E2A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "RetrieveWeatherDataLambdaServiceRoleDefaultPolicyB1C4C87A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "WeatherS3970C7C5A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RetrieveWeatherDataLambdaServiceRoleDefaultPolicyB1C4C87A",
        "Roles": Array [
          Object {
            "Ref": "RetrieveWeatherDataLambdaServiceRoleC7E56E2A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StaticPageS36AC60243": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketName": "weather-app-static-page-sashin",
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedHeaders": Array [
                "*",
              ],
              "AllowedMethods": Array [
                "GET",
              ],
              "AllowedOrigins": Array [
                "*",
              ],
            },
          ],
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:cr-owned:cb6a844c",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": Object {
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StaticPageS3DeployAwsCliLayerC6CF3ED0": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "61f3b82f5fe3b135f58644b9bb25da9af6d46345bbe50c3d935682beae71ef17.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "StaticPageS3DeployCustomResourceB566DF13": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "StaticPageS36AC60243",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": Array [
          "5b7b25a0121cd3a72219a14f16c6e851b155e08a63f9173434e772635ec69feb.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticPageS3PolicyFC5389BC": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "StaticPageS36AC60243",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "StaticPageS36AC60243",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "WeatherAppPipelineArtifactsBucket645EF135": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "WeatherAppPipelineArtifactsBucketPolicy026E6D88": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "WeatherAppPipelineArtifactsBucket645EF135",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "WeatherAppPipelineArtifactsBucket645EF135",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WeatherAppPipelineArtifactsBucket645EF135",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "WeatherAppPipelineBuildSynthCdkBuildProject3A1142D3": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step AwsWeatherAppStack/Pipeline/Build/Synth",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "WeatherAppPipelineBuildSynthCdkBuildProjectRoleFE74E8B2",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"build\\": {
      \\"commands\\": [
        \\"npm ci\\",
        \\"npm run build\\",
        \\"npx cdk synth\\"
      ]
    }
  },
  \\"artifacts\\": {
    \\"base-directory\\": \\"cdk.out\\",
    \\"files\\": \\"**/*\\"
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "WeatherAppPipelineBuildSynthCdkBuildProjectRoleDefaultPolicy9AA1D059": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "WeatherAppPipelineBuildSynthCdkBuildProject3A1142D3",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "WeatherAppPipelineBuildSynthCdkBuildProject3A1142D3",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "WeatherAppPipelineBuildSynthCdkBuildProject3A1142D3",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "WeatherAppPipelineArtifactsBucket645EF135",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WeatherAppPipelineArtifactsBucket645EF135",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WeatherAppPipelineBuildSynthCdkBuildProjectRoleDefaultPolicy9AA1D059",
        "Roles": Array [
          Object {
            "Ref": "WeatherAppPipelineBuildSynthCdkBuildProjectRoleFE74E8B2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WeatherAppPipelineBuildSynthCdkBuildProjectRoleFE74E8B2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "WeatherAppPipelineBuildSynthCodePipelineActionRoleDefaultPolicy391E0D1F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "WeatherAppPipelineBuildSynthCdkBuildProject3A1142D3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WeatherAppPipelineBuildSynthCodePipelineActionRoleDefaultPolicy391E0D1F",
        "Roles": Array [
          Object {
            "Ref": "WeatherAppPipelineBuildSynthCodePipelineActionRoleF7A9B2B5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WeatherAppPipelineBuildSynthCodePipelineActionRoleF7A9B2B5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "WeatherAppPipelineD075FB91": Object {
      "DependsOn": Array [
        "WeatherAppPipelineRoleDefaultPolicy4D7F64AD",
        "WeatherAppPipelineRoleE2669DAD",
      ],
      "Properties": Object {
        "ArtifactStore": Object {
          "Location": Object {
            "Ref": "WeatherAppPipelineArtifactsBucket645EF135",
          },
          "Type": "S3",
        },
        "Name": "WeatherAppPipeline",
        "RestartExecutionOnUpdate": true,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "WeatherAppPipelineRoleE2669DAD",
            "Arn",
          ],
        },
        "Stages": Array [
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1",
                },
                "Configuration": Object {
                  "Branch": "main",
                  "OAuthToken": "{{resolve:secretsmanager:github-token:SecretString:::}}",
                  "Owner": "sashinshin",
                  "PollForSourceChanges": false,
                  "Repo": "aws-weather-app",
                },
                "Name": "sashinshin_aws-weather-app",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "sashinshin_aws_weather_app_Source",
                  },
                ],
                "RunOrder": 1,
              },
            ],
            "Name": "Source",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"b50c24509f49e3d26ea020f3c769584878ee449b82908d1944eb742cda8220ea\\"}]",
                  "ProjectName": Object {
                    "Ref": "WeatherAppPipelineBuildSynthCdkBuildProject3A1142D3",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "sashinshin_aws_weather_app_Source",
                  },
                ],
                "Name": "Synth",
                "OutputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "WeatherAppPipelineBuildSynthCodePipelineActionRoleF7A9B2B5",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "Build",
          },
          Object {
            "Actions": Array [
              Object {
                "ActionTypeId": Object {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1",
                },
                "Configuration": Object {
                  "EnvironmentVariables": "[{\\"name\\":\\"_PROJECT_CONFIG_HASH\\",\\"type\\":\\"PLAINTEXT\\",\\"value\\":\\"279f6932f1645bf25eef563fd5b9f63fc3c5878583c94c05bc086e193ed23371\\"}]",
                  "ProjectName": Object {
                    "Ref": "WeatherAppPipelineUpdatePipelineSelfMutation137DDD07",
                  },
                },
                "InputArtifacts": Array [
                  Object {
                    "Name": "Synth_Output",
                  },
                ],
                "Name": "SelfMutate",
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "WeatherAppPipelineUpdatePipelineSelfMutateCodePipelineActionRole5123CD5A",
                    "Arn",
                  ],
                },
                "RunOrder": 1,
              },
            ],
            "Name": "UpdatePipeline",
          },
        ],
      },
      "Type": "AWS::CodePipeline::Pipeline",
    },
    "WeatherAppPipelineRoleDefaultPolicy4D7F64AD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "WeatherAppPipelineArtifactsBucket645EF135",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WeatherAppPipelineArtifactsBucket645EF135",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "WeatherAppPipelineBuildSynthCodePipelineActionRoleF7A9B2B5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "WeatherAppPipelineUpdatePipelineSelfMutateCodePipelineActionRole5123CD5A",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WeatherAppPipelineRoleDefaultPolicy4D7F64AD",
        "Roles": Array [
          Object {
            "Ref": "WeatherAppPipelineRoleE2669DAD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WeatherAppPipelineRoleE2669DAD": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codepipeline.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "WeatherAppPipelineSourcesashinshinawsweatherappWebhookResourceC389C0A6": Object {
      "Properties": Object {
        "Authentication": "GITHUB_HMAC",
        "AuthenticationConfiguration": Object {
          "SecretToken": "{{resolve:secretsmanager:github-token:SecretString:::}}",
        },
        "Filters": Array [
          Object {
            "JsonPath": "$.ref",
            "MatchEquals": "refs/heads/{Branch}",
          },
        ],
        "RegisterWithThirdParty": true,
        "TargetAction": "sashinshin_aws-weather-app",
        "TargetPipeline": Object {
          "Ref": "WeatherAppPipelineD075FB91",
        },
        "TargetPipelineVersion": 1,
      },
      "Type": "AWS::CodePipeline::Webhook",
    },
    "WeatherAppPipelineUpdatePipelineSelfMutateCodePipelineActionRole5123CD5A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "WeatherAppPipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyF5560E15": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "WeatherAppPipelineUpdatePipelineSelfMutation137DDD07",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WeatherAppPipelineUpdatePipelineSelfMutateCodePipelineActionRoleDefaultPolicyF5560E15",
        "Roles": Array [
          Object {
            "Ref": "WeatherAppPipelineUpdatePipelineSelfMutateCodePipelineActionRole5123CD5A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WeatherAppPipelineUpdatePipelineSelfMutation137DDD07": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "CODEPIPELINE",
        },
        "Cache": Object {
          "Type": "NO_CACHE",
        },
        "Description": "Pipeline step AwsWeatherAppStack/Pipeline/UpdatePipeline/SelfMutate",
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "WeatherAppPipeline-selfupdate",
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "WeatherAppPipelineUpdatePipelineSelfMutationRoleB39C9FE7",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"install\\": {
      \\"commands\\": [
        \\"npm install -g aws-cdk@2\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cdk -a . deploy AwsWeatherAppStack --require-approval=never --verbose\\"
      ]
    }
  }
}",
          "Type": "CODEPIPELINE",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "WeatherAppPipelineUpdatePipelineSelfMutationRoleB39C9FE7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "WeatherAppPipelineUpdatePipelineSelfMutationRoleDefaultPolicy65DC40E3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "WeatherAppPipelineUpdatePipelineSelfMutation137DDD07",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "WeatherAppPipelineUpdatePipelineSelfMutation137DDD07",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "WeatherAppPipelineUpdatePipelineSelfMutation137DDD07",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "ForAnyValue:StringEquals": Object {
                  "iam:ResourceTag/aws-cdk:bootstrap-role": Array [
                    "image-publishing",
                    "file-publishing",
                    "deploy",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:*:iam::",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":role/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "cloudformation:DescribeStacks",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "WeatherAppPipelineArtifactsBucket645EF135",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "WeatherAppPipelineArtifactsBucket645EF135",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "WeatherAppPipelineUpdatePipelineSelfMutationRoleDefaultPolicy65DC40E3",
        "Roles": Array [
          Object {
            "Ref": "WeatherAppPipelineUpdatePipelineSelfMutationRoleB39C9FE7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "WeatherS3970C7C5A": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketName": "weather-data-sashin",
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "weatherapiAccountFDBF2E6F": Object {
      "DependsOn": Array [
        "weatherapiBE4B60EC",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "weatherapiCloudWatchRoleFEB1104A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "weatherapiBE4B60EC": Object {
      "Properties": Object {
        "Name": "weather-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "weatherapiCloudWatchRoleFEB1104A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "weatherapiDeployment38D9EA955570fba8d50739abd0b09f95c624671f": Object {
      "DependsOn": Array [
        "weatherapiweatherGET26755C47",
        "weatherapiweather90AC38C7",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "weatherapiBE4B60EC",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "weatherapiDeploymentStageprod07E5ABF0": Object {
      "DependsOn": Array [
        "weatherapiAccountFDBF2E6F",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "weatherapiDeployment38D9EA955570fba8d50739abd0b09f95c624671f",
        },
        "RestApiId": Object {
          "Ref": "weatherapiBE4B60EC",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "weatherapiweather90AC38C7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "weatherapiBE4B60EC",
            "RootResourceId",
          ],
        },
        "PathPart": "weather",
        "RestApiId": Object {
          "Ref": "weatherapiBE4B60EC",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "weatherapiweatherGET26755C47": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "AccessWeatherDataLambdaD4FDB435",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "weatherapiweather90AC38C7",
        },
        "RestApiId": Object {
          "Ref": "weatherapiBE4B60EC",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "weatherapiweatherGETApiPermissionAwsWeatherAppStackweatherapi5F2FACCAGETweatherB89CECBC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AccessWeatherDataLambdaD4FDB435",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "weatherapiBE4B60EC",
              },
              "/",
              Object {
                "Ref": "weatherapiDeploymentStageprod07E5ABF0",
              },
              "/GET/weather",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "weatherapiweatherGETApiPermissionTestAwsWeatherAppStackweatherapi5F2FACCAGETweather1841B0CE": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "AccessWeatherDataLambdaD4FDB435",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "weatherapiBE4B60EC",
              },
              "/test-invoke-stage/GET/weather",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
